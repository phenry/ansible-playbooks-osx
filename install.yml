---
- hosts: workstation
#  roles:
#  - role: osxc.packages
#    brew_taps:
#    - caskroom/fonts
#    brew_packages:
#    - git
#    - zsh
#    - vim
#    - the_silver_searcher
#    - ctags
#    - reattach-to-user-namespace
#    - tmux
#    cask_packages:
#    - font-inconsolata-for-powerline
#    - iterm2
#    - macvim

  vars:
    install_dir: /usr/local


  tasks:

  # https://github.com/sorin-ionescu/prezto
  - name: change shell to zsh
    command: chsh -s /bin/zsh {{ ansible_user_id }}
    become: yes
    become_method: sudo

  - name: install homebrew
    command: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" creates=/usr/local/Cellar

#  - name: update homebrew
#    homebrew: update_homebrew=yes

  # http://hackercodex.com/guide/python-development-environment-on-mac-osx/
  - name: install python from homebrew
    #command: brew install python
    homebrew: name={{item}}
    with_items:
      - python
      - python3
  
  - name: install virtualenv from pip
    #command: PIP_REQUIRE_VIRTUALENV="" pip install virtualenv virtualenvwrapper
    pip: name={{item}}
    with_items:
      - virtualenv
      - virtualenvwrapper
    
  - name: install virtualenv from pip3
    #command: PIP_REQUIRE_VIRTUALENV="" pip3 install virtualenv virtualenvwrapper
    pip: name={{item}} executable=pip3
    with_items:
      - virtualenv
      - virtualenvwrapper

# (Deprecated)
#  - name: easy install pip
#    easy_install: name=pip
#    sudo: yes
#    #command: sudo easy_install pip

#  - name: install apps from pip
#    pip: name=setuptools extra_args='--no-use-wheel --upgrade'
#    sudo: yes
#    #command: sudo pip install setuptools --no-use-wheel --upgrade

  - name: install apps from homebrew
    homebrew: name={{ item }}
    with_items:
      - libyaml

  # https://devopsu.com/guides/ansible-mac-osx.html
  - name: install apps from pip
    #command: pip install ansible
    pip: name=ansible

  - name: install apps from pip
    #command: pip install --user Fabric
    pip: name={{item}}
    with_items:
        - tendo
        - argcomplete
        - watchdog
        - Fabric
        - httpie
        - Requests

  - name: install apps from homebrew
    #command: brew install wget
    homebrew: name={{ item }}
    with_items:
      - bazaar
      - docker
      #- ftp-cloudfs
      - rsync
      - ssh-copy-id
      - wget


# From: https://github.com/osxc/homebrew
  - name: assert cask presence
    stat: path={{ install_dir }}/bin/brew-cask
    register: cask_installed
  
  - name: tap the cask repository
    homebrew_tap: tap=caskroom/cask state=present
    when: cask_installed.stat.exists == false
  
  - name: install brew-cask
    homebrew: name=brew-cask state=latest update_homebrew=yes
    when: cask_installed.stat.exists == false
  
#  - name: add new cask opts to .zshenv
#    lineinfile: dest='~/.zshenv'
#                regexp='^export HOMEBREW_CASK_OPTS'
#                line='export HOMEBREW_CASK_OPTS="--appdir=/Applications"'
#                state=present


  - name: install apps from homebrew cask
    #command: brew-cask install iterm2
    homebrew_cask: name={{ item }}
    with_items:
        #- firefox
        - google-chrome
        - gpgtools
        - haroopad
        - hipchat
        - iterm2
        - sony-ericsson-bridge
        - sublime-text
        #- virtualbox 
        - viber
        - xnviewmp



       
# From: https://github.com/spencergibb/battleschool/tree/master/share/library
#
#  - name: install java 8 update 40
#    mac_pkg: pkg_name=com.oracle.jdk8u40 pkg_version=1.1
#             url=http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-macosx-x64.dmg
#             curl_opts="-L --cookie oraclelicense=accept-securebackup-cookie"
#             archive_type=dmg archive_path='JDK 8 Update 40.pkg'
#    sudo: yes

#    # https://raw.githubusercontent.com/spencergibb/ansible-osx/master/homebrew.yml
#    - name: install homebrew
#      mac_pkg: pkg_type=script script_creates=/usr/local/bin/brew
#               script_prefix='echo | ' script_exe=ruby
#               url=https://raw.github.com/Homebrew/homebrew/go/install
    
#  - name: get oh-my-zsh script
#    get_url: url=http://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh dest=/tmp/zsh.sh
#  - name: change file permission to be executable
#    command: chmod +x /tmp/oh-my-zsh.sh
#  - name: install zsh
#    script: /tmp/oh-my-zsh.sh

#  # http://ohmyz.sh/
#  - name: oh-my-zsh
#    command: curl -L http://install.ohmyz.sh | sh
#    command: curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
    

#    - name: create homdir symlinks
#      file: src={{item.from}} dest={{item.to}} state=link
#      sudo: no
#      with_items:
#         - from: ~/Dropbox/ubuntu/.bash_aliases
#           to: ~/.bash_aliases
#         - from: ~/Dropbox/ubuntu/.bash_logout
#           to: ~/.bash_logout
#         - from: ~/Dropbox/ubuntu/.bashrc
#           to: ~/.bashrc
#         - from: ~/Dropbox/mac/battleschool
#           to: ~/.battleschool
#         - from: ~/Dropbox/ubuntu/.ctags
#           to: ~/.ctags
#         - from: ~/Dropbox/ubuntu/.gitconfig
#           to: ~/.gitconfig
#         - from: ~/Dropbox/ubuntu/.inputrc
#           to: ~/.inputrc
#         - from: ~/Dropbox/ubuntu/.profile
#           to: ~/.profile
#         - from: ~/Dropbox/ubuntu/.todo
#           to: ~/.todo
#         - from: ~/Dropbox/ubuntu/.vimrc
#           to: ~/.vimrc
#         - from: ~/Dropbox/ubuntu/.zsh
#           to: ~/.zsh
#         - from: ~/Dropbox/ubuntu/.zshrc
#           to: ~/.zshrc
#         - from: ~/Dropbox/mac/bin
#           to: ~/bin

         
#    - name: install gems
#      gem: name={{item}} state=latest
#      with_items:
#          - brewbygems
#          - bundler
#          - compass


#  vars:
#    http_port: 80
#    max_clients: 200
#  tasks:
#  - name: ensure apache is at the latest version
#    yum: pkg=httpd state=latest
#  - name: write the apache config file
#    template: src=/srv/httpd.j2 dest=/etc/httpd.conf
#    notify:
#    - restart apache
#  - name: ensure apache is running (and enable it at boot)
#    service: name=httpd state=started enabled=yes
#  handlers:
#    - name: restart apache
#      service: name=httpd state=restarted
          
